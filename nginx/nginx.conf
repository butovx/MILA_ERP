events {
    worker_connections 1024;
    multi_accept on;
    use epoll;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    aio threads;
    directio 512;
    
    keepalive_timeout 65;
    client_max_body_size 50M;
    
    # Оптимизация для получения статических файлов
    open_file_cache max=10000 inactive=20s;
    open_file_cache_valid 30s;
    open_file_cache_min_uses 2;
    open_file_cache_errors on;
    
    # Настройка для кеширования статических файлов
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=images_cache:20m max_size=2g inactive=30d use_temp_path=off;
    
    # Настройка для обработки статических файлов
    server {
        listen 80;
        server_name localhost;
        return 301 https://$host$request_uri;
    }

    server {
        listen 443 ssl http2;
        server_name localhost;

        ssl_certificate /etc/nginx/certs/localhost.pem;
        ssl_certificate_key /etc/nginx/certs/localhost-key.pem;
        
        # Увеличиваем размер буфера для проксирования изображений
        proxy_buffers 32 8k;
        proxy_buffer_size 8k;
        
        # Обработка запросов Next.js Image Optimization
        location /_next/image {
            proxy_pass http://web:3000/_next/image;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            
            # Не пропускаем upgrade заголовки для статических ресурсов
            proxy_set_header Upgrade "";
            proxy_set_header Connection "";
            
            # Настройки кеша для оптимизированных изображений
            proxy_cache images_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 301 302 304 30d;
            proxy_cache_valid 404 1m;
            proxy_cache_lock on;
            proxy_cache_lock_timeout 5s;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_methods GET HEAD;
            proxy_cache_min_uses 1;
            
            # Агрессивное кеширование
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires max;
            
            # Добавляем информацию о кешировании в заголовки для отладки
            add_header X-Cache-Status $upstream_cache_status always;
            
            # Увеличиваем таймауты для обработки изображений
            proxy_read_timeout 120s;
            proxy_connect_timeout 120s;
            proxy_send_timeout 120s;
        }
        
        # Оптимизация для статических файлов Next.js
        location /_next/static {
            proxy_pass http://web:3000/_next/static;
            proxy_cache images_cache;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_cache_valid 200 301 302 304 30d;
            add_header Cache-Control "public, max-age=31536000, immutable";
            expires max;
            add_header X-Cache-Status $upstream_cache_status always;
        }
        
        # Основная конфигурация для Next.js
        location / {
            proxy_pass http://web:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;
            
            proxy_connect_timeout 300s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
        }

        # Обработка статических файлов из /uploads напрямую
        location /uploads/ {
            alias /app/public/uploads/;
            
            # Исправление дублированных путей с uploads//app/public/uploads
            rewrite ^/uploads//app/public/uploads/(.*)$ /uploads/$1 redirect;
            # Также исправляем путь с двойным слешем
            rewrite ^/uploads//(.*) /uploads/$1 redirect;
            
            # Настройки кросс-доменных запросов
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Allow-Headers "Origin, Accept, Content-Type, X-Requested-With";
            add_header X-Frame-Options "SAMEORIGIN";
            
            # Устанавливаем правильные заголовки кеширования
            # Вместо отключения кеширования используем ETAG и Last-Modified
            # для эффективного условного кеширования
            expires 30d;
            add_header Cache-Control "public, max-age=2592000, must-revalidate";
            etag on;
            if_modified_since exact;
            
            # Добавляем заголовок для мониторинга кеша
            add_header X-Cache-Status "HIT" always;
            
            # Оптимизации для быстрой отдачи файлов
            sendfile on;
            tcp_nopush on;
            aio threads;
            directio 512;
            output_buffers 2 128k;
            
            # Отключаем сжатие изображений для сохранения качества
            gzip off;
            
            # Настраиваем типы файлов для корректного отображения
            types {
                image/jpeg jpg jpeg JPG JPEG;
                image/png png PNG;
                image/gif gif GIF;
                image/webp webp WEBP;
            }
            
            # Отключаем сжатие если клиент не поддерживает
            gzip_static off;
            
            # Добавляем специальные заголовки для отладки
            add_header X-Debug-Path $request_filename;
            add_header X-File-Date $date_gmt;
        }
    }
}
