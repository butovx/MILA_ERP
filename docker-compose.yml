version: "3.8"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./certificates:/etc/nginx/certs
      - ./public:/app/public
    depends_on:
      - web
    networks:
      - app-network

  web:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - DATABASE_URL=${DATABASE_URL}
    ports:
      - "3000:3000"
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/shop
      PORT: 3000
      NODE_ENV: production
    volumes:
      - ./public/uploads:/app/public/uploads
    depends_on:
      - db
    networks:
      - app-network

  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: shop
    volumes:
      # Том для сохранения данных PostgreSQL между перезапусками контейнера
      - postgres_data:/var/lib/postgresql/data
      # Опционально: монтирование SQL-скрипта для инициализации схемы
      - ./psql/schema.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      # Опционально: открыть порт для доступа к БД с хост-машины (например, для отладки)
      - "5432:5432"
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
